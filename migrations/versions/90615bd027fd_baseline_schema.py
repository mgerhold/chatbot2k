"""baseline schema

Revision ID: 90615bd027fd
Revises:
Create Date: 2025-09-01 18:30:26.009215

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "90615bd027fd"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "broadcast",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("interval_seconds", sa.Integer(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("alias_command", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_broadcast")),
    )
    op.create_table(
        "constant",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_constant")),
    )
    op.create_table(
        "dictionaryentry",
        sa.Column("word", sa.String(), nullable=False),
        sa.Column("explanation", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("word", name=op.f("pk_dictionaryentry")),
    )
    op.create_table(
        "parameterizedcommand",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("response", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_parameterizedcommand")),
    )
    op.create_index(op.f("ix_parameterizedcommand_name"), "parameterizedcommand", ["name"], unique=False)
    op.create_table(
        "soundboardcommand",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("clip_url", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_soundboardcommand")),
    )
    op.create_table(
        "staticcommand",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("response", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_staticcommand")),
    )
    op.create_table(
        "translation",
        sa.Column(
            "key",
            sa.Enum(
                "COMMAND_ALREADY_EXISTS",
                "COMMAND_TO_UPDATE_NOT_FOUND",
                "COMMAND_TO_DELETE_NOT_FOUND",
                "BUILTIN_COMMAND_CANNOT_BE_DELETED",
                "BUILTIN_COMMAND_CANNOT_BE_CHANGED",
                "COMMAND_ADDED",
                "COMMAND_UPDATED",
                "COMMAND_REMOVED",
                "SOUNDBOARD_ENABLED",
                "SOUNDBOARD_DISABLED",
                "CANNOT_ADD_OR_UPDATE_SOUNDBOARD_COMMAND",
                name="translationkey",
            ),
            nullable=False,
        ),
        sa.Column("value", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("key", name=op.f("pk_translation")),
    )
    op.create_table(
        "parameter",
        sa.Column("command_name", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["command_name"],
            ["parameterizedcommand.name"],
            name=op.f("fk_parameter_command_name_parameterizedcommand"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("command_name", "name", name=op.f("pk_parameter")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("parameter")
    op.drop_table("translation")
    op.drop_table("staticcommand")
    op.drop_table("soundboardcommand")
    op.drop_index(op.f("ix_parameterizedcommand_name"), table_name="parameterizedcommand")
    op.drop_table("parameterizedcommand")
    op.drop_table("dictionaryentry")
    op.drop_table("constant")
    op.drop_table("broadcast")
    # ### end Alembic commands ###
